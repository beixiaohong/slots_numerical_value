#!/usr/bin/env python3
# -*- coding: utf-8 -*-

'配置信息'

__author__ = 'haotian zhang'

#定义每个图标的名字
icons = ['SCATTER','WILD(福)',  '金凤凰', '金船', '金龟', '金元宝', '金铜钱', '凤凰', '船', '龟', '元宝', 'A', 'K', 'Q', 'J', '10', '9']

# 定义每个格子中每个图标的权重
# 注意：权重列表需要与icons列表长度一致，并且每个子列表代表一行中各格子的权重分布
nomal_grid_probs = [
    # 第一行的权重分布
    [
        [1,0,1,1,3,3,1,1,3,3,4,5,6,11,16,17,24],
        [1,1,4,1,3,3,1,1,3,3,4,5,6,12,17,18,21],
        [1,1,1,1,3,3,1,1,2,3,4,5,6,11,16,17,24],
        [1,1,1,1,3,3,1,1,4,3,4,5,6,12,17,18,21],
        [1,1,1,1,3,3,1,1,3,3,4,5,6,11,16,17,23]
    ],
    # 第二行的权重分布
    [
        [1,0,2,1,3,3,1,1,3,3,4,5,6,11,16,17,24],
        [1,1,3,1,3,3,1,1,3,3,4,5,6,12,17,18,21],
        [1,1,1,1,3,3,1,1,2,3,4,5,6,11,16,17,24],
        [1,1,1,1,3,3,1,1,4,3,4,5,6,12,17,18,21],
        [1,1,1,1,3,3,1,1,3,3,4,5,6,11,16,17,23]
    ],
    # 第三行的权重分布
    [
        [1,0,1,1,3,3,1,1,3,3,4,5,6,11,16,17,24],
        [1,1,1,1,3,3,1,1,3,3,4,5,6,12,17,18,21],
        [1,1,1,1,3,3,1,1,2,3,4,5,6,11,16,17,24],
        [1,1,1,1,3,3,1,1,4,3,4,5,6,12,17,18,21],
        [1,1,1,1,3,3,1,1,3,3,4,5,6,11,16,17,23]
    ]
]

icon_weights = {
        icons[0]: {1: 0, 2: 0, 3: 0, 4: 0, 5: 0},#WILD
        icons[1]: {1: 0,2: 0, 3: 5, 4: 10, 5: 50},#SCATTER
        icons[2]: {1: 0,2: 0, 3: 100, 4: 200, 5: 1000},#金凤凰
        icons[3]: {1: 0,2: 0, 3: 50, 4: 100, 5: 500},#金船
        icons[4]: {1: 0,2: 0, 3: 40, 4: 80, 5: 400},#金龟
        icons[5]: {1: 0,2: 0, 3: 25, 4: 50, 5: 250},#金元宝
        icons[6]: {1: 0,2: 0, 3: 10, 4: 20, 5: 100},#金铜钱
        icons[7]: {1: 0,2: 0, 3: 5, 4: 10, 5: 50},#凤凰
        icons[8]: {1: 0,2: 0, 3: 5, 4: 10, 5: 50},#船
        icons[9]: {1: 0,2: 0, 3: 5, 4: 10, 5: 50},#龟
        icons[10]: {1: 0,2: 0, 3: 5, 4: 10, 5: 50},#元宝
        icons[11]: {1: 0,2: 0, 3: 5, 4: 10, 5: 50},#A
        icons[12]: {1: 0,2: 0, 3: 5, 4: 10, 5: 50},#K
        icons[13]: {1: 0,2: 0, 3: 5, 4: 10, 5: 50},#Q
        icons[14]: {1: 0,2: 0, 3: 5, 4: 10, 5: 50},#J
        icons[15]: {1: 0,2: 0, 3: 5, 4: 10, 5: 50},#10
        icons[16]: {1: 0,2: 0, 3: 5, 4: 10, 5: 50}  # 9
    }

def grid_probs(bettype):
    match bettype:
        case 1 :
            for row in nomal_grid_probs:
                # 遍历每一行，设置第2子行的第五列的值为 3
                #row[1][4] = 0
                for col in row:
                    # 遍历每一子行，设置第五列的值为 0
                    col[1] = 0
                    col[2] = 0
                    col[3] = 0
                    col[4] = 0
            return nomal_grid_probs
        case 2 :
            for row in nomal_grid_probs:
                # 遍历每一行，设置第2子行的第五列的值为 3
                #row[1][4] = 0
                for col in row:
                    # 遍历每一子行，设置第五列的值为 0
                    col[1] = 0
                    col[2] = 0
                    col[3] = 0
            return nomal_grid_probs
        case 3 :
            for row in nomal_grid_probs:
                # 遍历每一行，设置第2子行的第五列的值为 3
                #row[1][4] = 0
                for col in row:
                    # 遍历每一子行，设置第五列的值为 0
                    col[1] = 0
                    col[2] = 0
            return nomal_grid_probs
        case 4 :
            for row in nomal_grid_probs:
                # 遍历每一行，设置第2子行的第五列的值为 3
                #row[1][4] = 0
                for col in row:
                    # 遍历每一子行，设置第五列的值为 0
                    col[1] = 0
        case _:
            return nomal_grid_probs